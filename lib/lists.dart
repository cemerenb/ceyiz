import 'dart:convert';

class Item {
  String name;
  double price;
  int piece;
  bool isChecked;

  Item({
    required this.name,
    this.price = 0,
    this.piece = 0,
    this.isChecked = false,
  });

  Map<String, dynamic> toMap() {
    return <String, dynamic>{
      'name': name,
      'price': price,
      'piece': piece,
      'isChecked': isChecked,
    };
  }

  factory Item.fromMap(Map<String, dynamic> map) {
    return Item(
      name: map['name'] as String,
      price: map['price'] as double,
      piece: map['piece'] as int,
      isChecked: map['isChecked'] as bool,
    );
  }

  String toJson() => json.encode(toMap());
  factory Item.fromJson(String source) =>
      Item.fromMap(json.decode(source) as Map<String, dynamic>);

  @override
  String toString() {
    return 'Item(name: $name, price: $price, piece: $piece, isChecked: $isChecked)';
  }

  @override
  bool operator ==(covariant Item other) {
    if (identical(this, other)) return true;

    return other.name == name &&
        other.price == price &&
        other.piece == piece &&
        other.isChecked == isChecked;
  }

  @override
  int get hashCode {
    return name.hashCode ^ price.hashCode ^ piece.hashCode ^ isChecked.hashCode;
  }
}

List<Item> items =
    groceries.map((String itemName) => Item(name: itemName)).toList();

List<String> groceries = [
  "Baharat Takımı",
  "Bakliyat Kavanozları",
  "Bıçaklar / Bıçak Seti",
  "Borcam",
  "Bulaşıklık Sepeti",
  "Ceviz – Fındık Kıracağı",
  "Cezve Seti",
  "Çatal – Kaşık – Bıçak Takımı",
  "Çay – Kahve Kavanozları",
  "Çay Kaşığı Seti",
  "Çay Seti / Bardakları",
  "Çay Süzgeci",
  "Çaydanlık",
  "Çekmece İçi Çatal – Bıçaklık",
  "Çerez Takımı",
  "Çırpma Tеli",
  "Çöp Kutusu",
  "Dondurma Kasеlеri",
  "Düdüklü Tencere",
  "Ekmek Kutusu / Sepeti",
  "Fırın Kapları / Tepsileri",
  "Güveç Takımı",
  "Havan",
  "Huni",
  "Kadеh Bardağı / Takımı",
  "Kahvaltı Takımı",
  "Kahvaltılık Saklama Seti",
  "Kahve Fincanı Takımı",
  "Kek Kalıbı ve Fanusu",
  "Kaşık / Kepçe Altlığı",
  "Kepçe Takımı",
  "Kesme Tahtası",
  "Kevgir",
  "Kızartma Tenceresi",
  "Kupa",
  "Kurabiye Kalıbı",
  "Kürdanlık",
  "Limon Sıkacağı",
  "Limonluk / Yağdanlık",
  "Masa – Sandalye Seti / Takımı",
  "Maşa",
  "Merdane / Oklava",
  "Meyve Tabağı / Takımı",
  "Mutfak Dolabı",
  "Mutfak Makası",
  "Mutfak Saati",
  "Mutfak Tartısı",
  "Narenciye Sıkacağı",
  "Nihale",
  "Pasta Servisi Seti",
  "Patatеs Soğan Sеpеti",
  "Peçete Halkası",
  "Peçetelik",
  "Poşetlik",
  "Rakı Bardağı / Seti",
  "Rende",
  "Sahan Seti",
  "Saklama Kapları",
  "Sarımsak Ezеcеği – Rеndеsi",
  "Satır",
  "Servis Peçetesi",
  "Sofra Baharat Takımı",
  "Spatula",
  "Su Bardakları / Su Takımı",
  "Sürahi",
  "Süzgeçler",
  "Şekerlik",
  "Şişe Açacağı",
  "Tahta Kaşık Seti",
  "Tencere / Tava Seti",
  "Tepsi Takımı",
  "Tuzluk – Biberlik",
  "Tirbuşon",
  "Yağlık – Sirkelik",
  "Yemek Takımı (Günlük)",
  "Yemek Takımı (Misafir)",
  "Yumurta Fırçası",
  "Buzdolabı",
  "Bulaşık Makinesi",
  "Çamaşır Kurutma Makinası",
  "Çamaşır Makinası",
  "Fırın",
  "Klima",
  "Mikrodalga Fırın",
  "Set Üstü Ocak",
  "Su Sebili",
  "Berjer / Tekli Koltuk",
  "Gardrop / Dolap",
  "Karyola – Baza & Başlık",
  "Komodin",
  "Makyaj Masası",
  "Şifonyer",
  "Yatak",
  "Yatak Odası Takımı",
  "Yorgan ve yastıklar",
  "Dolap askıları",
  "Perde",
  "Nevresim takımları",
  "Yatak örtüsü",
  "Pike takımları",
  "Battaniyeler",
  "Misafir nevresim takımı",
  "Zigon sehpa takımı",
  "Halı",
  "Perde- Kırlent",
  "Televizyon",
  "2 adet orta boy vazo",
  "Kitaplık",
  "Koltuk / Salon Takımı",
  "Puf Koltuk",
  "Sehpa",
  "Vitrin / Konsol",
  "Yemek Odası Takımı / Seti",
  "Ayak Havlusu",
  "Banyo Aksesuar Seti",
  "Banyo Çöp Kovası",
  "Banyo Dolapları",
  "Banyo Halısı & Paspas",
  "Banyo Havluları",
  "Banyo Kaydırmaz",
  "Banyo Terliği",
  "Bornoz / Havlu Takımı",
  "Çamaşır İpi",
  "Çamaşır Kurutma Tеli",
  "Çamaşır Sеlеsi",
  "Çamaşırlık / Kirli Sepeti",
  "Diş Fırçası",
  "Ecza Dolabı",
  "El ve Yüz Havluları",
  "Havlu Askılıkları",
  "Klozet Takımı",
  "Temizlik Kovası",
  "Lavabo Pompası",
  "Lif / Kese",
  "Lеğеn",
  "Mandal",
  "Petek Üstü Kurutucu",
  "Tarak / Tarak Seti",
  "Tartı",
  "Tırnak Makası",
  "Törpü Seti",
  "Tuvalеt Fırçası",
  "Alez",
  "Amerikan Servisi",
  "Battaniyе",
  "Çarşaf / Çarşaf Takımı",
  "Fırın Eldiveni",
  "Halı",
  "Havlu",
  "Kilim",
  "Koltuk Şalı",
  "Kurulama Bezi",
  "Masa Örtüsü",
  "Mutfak Önlüğü",
  "Nеvrеsim Takımı",
  "Perde",
  "Pikе Takımı",
  "Runner",
  "Sofra Bezi",
  "Temizlik Bezi",
  "Yastık",
  "Yastık Kılıfı",
  "Yatak Örtüsü",
  "Yatak Seti / Uyku Seti",
  "Yorgan",
  "Fritöz",
  "Çay Makinesi",
  "Blender Seti",
  "Doğrayıcı / Rondo",
  "Ekmek Kızartma Makinesi",
  "Elektrikli Izgara",
  "Elektrikli Süperge",
  "Filtre Kahve Makinesi",
  "Mikser",
  "Mutfak Robotu",
  "Ütü",
  "Saç Kurutma Makinası",
  "Su Isıtıcı / Kettle",
  "Televizyon",
  "Tost Makinesi",
  "Türk Kahve Makinesi",
  "Telefon / Modem",
  "Alet Çantası",
  "Dikiş Seti",
  "Ev Terliği",
  "Hurç",
  "Kapı Stoperi",
  "Kerata / Ayakkabı Çekeceği",
  "Kıyafet Askısı",
  "Makas",
  "Mangal",
  "Merdiven",
  "Mini Yangın Tüpü",
  "Portmanto / Askılık",
  "Sulama Kabı",
  "Şemsiyelik",
  "Tüy Toplayıcı",
  "Üçlü Priz",
  "Vileda",
  "Ütü Masası",
  "Abajur",
  "Ampul",
  "Aplik",
  "Avize",
  "Gece Lambası",
  "Lambader",
  "Masa Lambası",
  "Sarkıt Avize",
  "Spot Aydınlatma",
  "Tavan Vantilatörü",
  "Ayakkabılık",
  "Ayna / Dresuar",
  "Duvar Saati",
  "Mumluk ve Mum",
  "Resim ve Çerçeveleri",
  "Saksı",
  "Şamdan",
  "Tablo",
  "Tasarım Ürünleri",
  "Vazo"
];

// List<double> prices = [
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0
// ];
// List<double> pieces = [
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0
// ];

// List<double> isChecked = [
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0,
//   0
// ];
List<double> categories = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1,
  1,
  1,
  1,
  1,
  1,
  1,
  1,
  1,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  3,
  3,
  3,
  3,
  3,
  3,
  3,
  3,
  3,
  3,
  3,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  4,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  5,
  6,
  6,
  6,
  6,
  6,
  6,
  6,
  6,
  6,
  6,
  6,
  6,
  6,
  6,
  6,
  6,
  6,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  7,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  9,
  9,
  9,
  9,
  9,
  9,
  9,
  9,
  9,
  9,
];
